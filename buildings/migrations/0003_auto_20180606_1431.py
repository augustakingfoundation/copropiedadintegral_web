# Generated by Django 2.0.5 on 2018-06-06 14:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('buildings', '0002_auto_20180601_2108'),
    ]

    operations = [
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block', models.CharField(blank=True, help_text='Bloque o interior', max_length=50, null=True, verbose_name='bloque')),
                ('unit', models.CharField(help_text='apartamento, casa u oficina', max_length=50, verbose_name='unidad')),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='area (Mts)')),
                ('real_estate_registration', models.CharField(blank=True, max_length=50, null=True, verbose_name='matrícula inmobiliaria')),
                ('owner_name', models.CharField(max_length=100, verbose_name='nombre del propietario')),
                ('owner_document_type', models.PositiveSmallIntegerField(blank=True, choices=[(100, 'C.C.'), (110, 'C.E.'), (120, 'Pasaporte')], null=True, verbose_name='tipo de documento del propietario')),
                ('owner_document_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='número de documento del propietario')),
                ('owner_mobile_phone', models.CharField(blank=True, default='', error_messages={'min_length': 'Ingrese al menos %(limit_value)d caracteres, (actualmente tiene %(show_value)d).'}, help_text='Si desea ingresar más de un número celular, estos deben ir separados por coma (,).', max_length=32, validators=[django.core.validators.RegexValidator('^[0-9 ,]*$', message='El dato no es válido, sólo debe ingresar números. Si desea ingresar más de un número celular, estos deben estar separados por coma (,).'), django.core.validators.MinLengthValidator(10)], verbose_name='número celular del propietario')),
                ('owner_phone_number', models.CharField(blank=True, error_messages={'min_length': 'El campo "Número telefónico" debe tener al menos %(limit_value)d dígitos (actualmente tiene %(show_value)d).'}, help_text='Si desea ingresar más de un número telefónico, estos deben ir separados por coma (,).', max_length=32, validators=[django.core.validators.RegexValidator('^[0-9 ,]*$', message='El dato no es válido, sólo se permiten números. Si desea ingresar más de un número telefónico, estos deben estar separados por coma (,).'), django.core.validators.MinLengthValidator(6)], verbose_name='número telefónico del propietario')),
                ('owner_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='correo electrónico del propietario')),
                ('correspondence_address', models.CharField(blank=True, help_text='dirección alternativa para enviar correspondencia al propietario de la unidad', max_length=100, null=True, verbose_name='dirección de correspondencia')),
                ('leaseholder_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='nombre del arrendatario')),
                ('leaseholder_mobile_phone', models.CharField(blank=True, default='', error_messages={'min_length': 'Ingrese al menos %(limit_value)d caracteres, (actualmente tiene %(show_value)d).'}, help_text='Si desea ingresar más de un número celular, estos deben ir separados por coma (,).', max_length=32, validators=[django.core.validators.RegexValidator('^[0-9 ,]*$', message='El dato no es válido, sólo debe ingresar números. Si desea ingresar más de un número celular, estos deben estar separados por coma (,).'), django.core.validators.MinLengthValidator(10)], verbose_name='número celular del arrendatario')),
                ('leaseholder_phone_number', models.CharField(blank=True, error_messages={'min_length': 'El campo "Número telefónico" debe tener al menos %(limit_value)d dígitos (actualmente tiene %(show_value)d).'}, help_text='Si desea ingresar más de un número telefónico, estos deben ir separados por coma (,).', max_length=32, validators=[django.core.validators.RegexValidator('^[0-9 ,]*$', message='El dato no es válido, sólo se permiten números. Si desea ingresar más de un número telefónico, estos deben estar separados por coma (,).'), django.core.validators.MinLengthValidator(6)], verbose_name='número telefónico del arrendatario')),
                ('leaseholder_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='correo electrónico del arrendatario')),
                ('observations', models.TextField(blank=True, verbose_name='observaciones')),
                ('activity_log', models.TextField(blank=True, verbose_name='registro de actividad')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'unidad',
                'verbose_name_plural': 'unidades',
                'ordering': ('block', 'unit'),
            },
        ),
        migrations.AddField(
            model_name='building',
            name='activity_log',
            field=models.TextField(blank=True, verbose_name='registro de actividad'),
        ),
        migrations.AddField(
            model_name='unit',
            name='building',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buildings.Building', verbose_name='copropiedad'),
        ),
    ]
